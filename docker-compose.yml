services:
    app:
        hostname: app
        container_name: app
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "9001:9001"

    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:7.3.2
        hostname: kafka
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:

    control-center:
        image: confluentinc/cp-enterprise-control-center:7.3.2
        hostname: control-center
        container_name: control-center
        depends_on:
            - kafka
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021

    debezium:
        image: quay.io/debezium/connect:2.2
        volumes:
            - ./otel:/otel/
        environment:
            BOOTSTRAP_SERVERS: kafka:29092
            GROUP_ID: 1
            CONFIG_STORAGE_TOPIC: connect_configs
            OFFSET_STORAGE_TOPIC: connect_offsets
            KAFKA_OPTS: "-javaagent:/otel/otel-agent.jar -Dotel.resource.attributes=service.name=debezium-connector -Dotel.traces.exporter=zipkin -Dotel.metrics.exporter=none -Dotel.logs.exporter=none -Dotel.exporter.zipkin.endpoint=http://zipkin:9411/api/v2/spans"
        depends_on: [ kafka ]
        ports:
            - "8083:8083"

    postgres:
        container_name: postgres
        image: quay.io/debezium/example-postgres:2.2
        restart: always
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        ports:
            - '5433:5432'
        volumes:
            - postgres:/var/lib/postgresql/data

    zipkin:
        image: openzipkin/zipkin
        container_name: zipkin
        ports:
        - "9411:9411"

volumes:
    postgres: {}
